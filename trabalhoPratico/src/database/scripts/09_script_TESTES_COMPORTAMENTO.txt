--#############
--# Grupo 04
--#############


--=============
-- Ligacao a BD
--=============
\set dataBase fuga_selvagem
;
\set userName postgres
;
\connect :dataBase :userName
;
--==========================
--==========================

\echo      * Testes de Funcoes e Operadores (script 01_script_ESTENDER_MODELO_RELACIONAL):
\echo      * Testes para Funcao produto_vector_por_escalar (t_vector, real)
SELECT 
    (1, 2) as t_vector, 
    2 as real,
    produto_vector_por_escalar( (1, 2), 2 ) as resultado
;

\echo      * Testes para Operador * (t_vector, real)
SELECT 
    (1, 2) as t_vector, 
    2 as real,
    (1, 2) * 2 as resultado
;


----------------------------------------------------

\echo 
\echo      * Testes para Funcao soma_vector_vector (t_vector, t_vector)
SELECT 
    (1,2) as t_vector, 
    (2,3) as t_vector,
    soma_vector_vector( (1, 2), (2, 3) ) as resultado
;

\echo      * Testes para Operador + (t_vector, t_vector)
SELECT 
    (1,2) as t_vector, 
    (2,3) as t_vector,
    (1, 2)::t_vector + (2, 3)::t_vector as resultado
;

----------------------------------------------------

\echo 
\echo      * Testes para Funcao subtrair_vector (t_vector, t_vector)
SELECT 
    (1, 2) as t_vector, 
    (2, 3) as t_vector,
    subtrair_vector( (1, 2), (2, 3) ) as resultado
;

\echo      * Testes para Operador - (t_vector, t_vector)
SELECT 
    (1, 2) as t_vector, 
    (2, 3) as t_vector,
    (1, 2)::t_vector - (2, 3)::t_vector as resultado
;

----------------------------------------------------

\echo 
\echo      * Testes para Funcao geometry_to_tvector (geometry)
SELECT
    'POINT(1 2)' as geometry,
    geometry_to_tvector( ST_GeomFromText('POINT(1 2)') ) as resultado
;

----------------------------------------------------

\echo 
\echo      * Testes para Funcao subtrair_geometry (geometry, geometry)
SELECT 
    'POINT(1 2)' as geometry_1,
    'POINT(2 3)' as geometry_2,
    subtrair_geometry( ST_GeomFromText('POINT(1 2)'), ST_GeomFromText('POINT(2 3)') ) as resultado
;

\echo      * Testes para Operador - (geometry, geometry)
SELECT 
    'POINT(1 2)' as geometry_1,
    'POINT(2 3)' as geometry_2,
    ST_GeomFromText('POINT(1 2)') - ST_GeomFromText('POINT(2 3)') as resultado
;

----------------------------------------------------

\echo 
\echo      * Testes para Funcao divisao_vector_por_escalar (t_vector, real)
SELECT 
    (1, 2) as t_vector,
    2 as real,
    divisao_vector_por_escalar( (1, 2), 2 ) as resultado
;

\echo      * Testes para Operador / (t_vector, real)
SELECT 
    (1, 2) as t_vector,
    2 as real,
    (1, 2) / 2 as resultado
;

----------------------------------------------------

\echo 
\echo      * Testes para Funcao normalizar (t_vector)
SELECT 
    (1, 2) as t_vector,
    normalizar( (1, 2) ) as resultado
;

----------------------------------------------------

\echo 
\echo      * Testes de Funcoes e Operadores (script 03_script_CRIAR_COMPORTAMENTO):
\echo      * Testes para Funcao obter_terreno
select 
    terreno.id_terreno,
    tipo_terreno.nome as tipo_terreno,
    terreno.z_index,
    obter_terreno( ST_GeomFromText('POINT(1000 1000)') ) as dentro, 
    ST_Contains(terreno.geo_terreno, ST_GeomFromText('POINT(1000 1000)'))
FROM terreno
left join tipo_terreno on terreno.id_tipo_terreno = tipo_terreno.id_tipo_terreno;

----------------------------------------------------------

\echo 
\echo      * Testes para Funcao novo_posicao
select 
    ST_AsText(geo_ponto) as posicao,
    velocidade,
    ST_AsText(novo_posicao( geo_ponto, velocidade, 1 )) as nova_posicao
from cinematica
where id_cinematica = 1;

----------------------------------------------------------

\echo 
\echo      * Testes para Funcao novo_orientacao
select 
    orientacao,
    velocidade,
    novo_orientacao( orientacao, velocidade, 1 ) as nova_orientacao
from cinematica
where id_cinematica = 1;

----------------------------------------------------------

\echo 
\echo      * Testes para Funcao novo_velocidade
select 
    velocidade,
    aceleracao,
    1 as tempo, 
    velocidade_maxima,
    novo_velocidade( velocidade, aceleracao, 1, velocidade_maxima ) as nova_velocidade
from cinematica
where id_cinematica = 1;

----------------------------------------------------------

\echo 
\echo      * Testes para Funcao novo_aceleracao_linear
select 
    predador.id_objeto_movel, 
    c_predador.aceleracao, 
    ST_AsText(c_predador.geo_ponto) as posicao_predador, 
    ST_AsText(c_presa.geo_ponto) as posicao_presa,
    c_predador.geo_ponto - c_presa.geo_ponto as distancia,
    normalizar(c_presa.geo_ponto - c_predador.geo_ponto) * 0.2 as normalizacao,
    novo_aceleracao_linear( predador, presa, 0.2 ) as nova_aceleracao
from objeto_movel as predador
left join objeto_movel as presa on presa.id_objeto_movel = predador.id_alvo
left join cinematica as c_predador on predador.id_cinematica = c_predador.id_cinematica
left join cinematica as c_presa on c_presa.id_cinematica = (select id_cinematica from objeto_movel where id_objeto_movel = predador.id_alvo)
where predador.id_objeto_movel = 1;

----------------------------------------------------------

\echo 
\echo      * Testes para Funcao obter_aceleracao
select 
    obter_aceleracao( 1, 2, 0.2, 1 ) as aceleracao
;

----------------------------------------------------------

\echo 
\echo ->      * Testes Funcao centrar_forma2D (sem fator de escala)
WITH formas as (
    SELECT ST_GeomFromText('POLYGON ((0 0, 0 100, 100 100, 100 0, 0 0))') as poligono
)

SELECT 
    ST_AsText(ST_MakePoint(500, 500)) as ponto, 
    ST_AsText(poligono) as forma, 
    ST_AsText(ST_Centroid(poligono)) as centroid_inicial, 
    ST_AsText(centrar_forma2D(poligono, ST_MakePoint(500, 500))) as novas_coordenadas_forma
from formas;

\echo 
\echo ->      * Testes Funcao centrar_forma2D (com fator de escala)
WITH formas as (
    SELECT ST_GeomFromText('POLYGON ((0 0, 0 100, 100 100, 100 0, 0 0))') as poligono
)
SELECT 
    ST_AsText(ST_MakePoint(500, 500)) as ponto, 
    ST_AsText(poligono) as forma, 
    2 as fator_escala,
    ST_AsText(centrar_forma2D(poligono, ST_MakePoint(500, 500), 2)) as novas_coordenadas_forma
from formas;

----------------------------------------------------------

\echo 
\echo ->      * Testes Funcao simular_perseguicao
-- select simular_perseguicao(10);

----------------------------------------------------------

\echo 
\echo ->      * Testes Funcao criar_views_objetos
-- select criar_views_objetos();
